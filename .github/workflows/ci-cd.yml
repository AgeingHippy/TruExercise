# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI-CD with Gradle and Docker to CCP
# Only occur on push to main. build and deploy (in progress...)

on:
  push:
    branches: [ "main" ]

jobs:
  build-deploy:

    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      IMAGE_NAME: tru-exercise
      REPOSITORY_NAME: truexercise-repository
      PROJECT_ID: truexercise

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY_2 }}'

      - name: Setup GCI
        uses: google-github-actions/setup-gcloud@v2.1.0

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker --quiet
          gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Push Docker Image to Container Registry (GCR)
        env:
          GIT_TAG: v0.1.0
        run: |-
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:latest
          docker push gcr.io/$PROJECT_ID/$IMAGE_NAME:$GIT_TAG

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: v0.1.0
        run: |-
#          docker tag $IMAGE_NAME:latest europe-west2-docker.pkg.dev/truexercise/truexercise-repository/$IMAGE_NAME:latest
#          docker tag $IMAGE_NAME:latest europe-west2-docker.pkg.dev/truexercise/truexercise-repository/$IMAGE_NAME:$GIT_TAG
#          docker push europe-west2-docker.pkg.dev/truexercise/truexercise-repository/$IMAGE_NAME:latest
#          docker push europe-west2-docker.pkg.dev/truexercise/truexercise-repository/$IMAGE_NAME:$GIT_TAG
          docker tag $IMAGE_NAME:latest europe-west2-docker.pkg.dev/$PROJECT_ID/REPOSITORY_NAME/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest europe-west2-docker.pkg.dev/$PROJECT_ID/REPOSITORY_NAME/$IMAGE_NAME:$GIT_TAG
          docker push europe-west2-docker.pkg.dev/$PROJECT_ID/REPOSITORY_NAME/$IMAGE_NAME:latest
          docker push europe-west2-docker.pkg.dev/$PROJECT_ID/REPOSITORY_NAME/$IMAGE_NAME:$GIT_TAG





#  dependency-submission:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#    - uses: actions/checkout@v4
#    - name: Set up JDK 21
#      uses: actions/setup-java@v4
#      with:
#        java-version: '21'
#        distribution: 'temurin'
#
#    # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#    # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#    - name: Generate and submit dependency graph
#      uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

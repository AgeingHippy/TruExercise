# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI-CD with Gradle and Docker to GCR
# Only occur on push to main. build and deploy to Google Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
env:
  IMAGE_NAME: ${{ vars.DOCKER_IMAGE_NAME }}
  REPOSITORY_NAME: ${{ vars.CLOUD_REPOSITORY_NAME }} # Google Cloud Artifact Registry Repository Name
  PROJECT_ID: ${{ vars.CLOUD_PROJECT_ID }} # Google Cloud Project ID
  SERVICE: ${{ vars.CLOUD_SERVICE_NAME }} # Google Cloud Run Service Name
  GCR_REGION: ${{ vars.CLOUD_REGION }} # Google Cloud Run Service Region Name
  GAR_REGION: ${{ vars.CLOUD_REGION }} # Google Artifact Registry Region Name

jobs:
  build-deploy:

    runs-on: ubuntu-latest

    steps:
      - name: Display Variables
        run: |
          echo "Image Name : $IMAGE_NAME"
          echo "Repository Name : $REPOSITORY_NAME"
          echo "Project ID : $PROJECT_ID"
          echo "Service Name : $SERVICE"
          echo "Cloud Run Service Region : $GCR_REGION"
          echo "Artifact Registry Region : $GAR_REGION"

      - name: Check Variables Set
        if:  ${{ ! ( env.IMAGE_NAME && env.REPOSITORY_NAME && env.PROJECT_ID && env.SERVICE && env.GCR_REGION && env.GAR_REGION ) }}
        run: |
          echo "Not all variables are set"
          exit -1

      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build

      - name: Increment Version Tag
        id: increment-git-tag
        run: |
          bash ./scripts/git_update.sh -v patch 

      - name: Build Docker Image
        run: docker build -t $IMAGE_NAME:latest .

      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT_KEY }}'

      - name: Setup GCI
        uses: google-github-actions/setup-gcloud@v2.1.0

      - name: Configure Docker Client
        run: |-
          gcloud auth configure-docker europe-west2-docker.pkg.dev

      - name: Push Docker Image to Artifact Registry
        env:
          GIT_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |-
          docker tag $IMAGE_NAME:latest $GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$IMAGE_NAME:$GIT_TAG
          docker push $GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$IMAGE_NAME:latest
          docker push $GAR_REGION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME/$IMAGE_NAME:$GIT_TAG

      # - name: Clear Existing Coud Run Environment Variables
      #   run: |
      #     gcloud run deploy --clear-env-vars

      - name: Deploy to Cloud Run
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v2.6.0'
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.GCR_REGION }}
          image: ${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY_NAME }}/${{ env.IMAGE_NAME }}:latest
          env_vars: |
            SPRING_PROFILES_ACTIVE=prod
            TRUEXERCISE_ENV_EXTERNAL_PROPERTY=external-production-property
          env_vars_update_strategy: overwrite

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

  dependency-submission:

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
